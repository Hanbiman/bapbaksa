-- DB_BAPBAKSA
-- CREATE DATABASE DB_BAPBAKSA;
-- USE DB_BAPBAKSA;

DROP TABLE IF EXISTS TBL_USER;
CREATE TABLE TBL_USER (
    u_no             INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    u_id             VARCHAR(50) NOT NULL,
    u_pw             VARCHAR(200) NOT NULL,
    u_mail           VARCHAR(100) NOT NULL,
    u_phone          VARCHAR(50) NOT NULL,
    u_google_id      VARCHAR(100),
    u_status         INT NOT NULL DEFAULT 1,
    u_zip_code       VARCHAR(50),
    u_first_address  VARCHAR(100),
    u_second_address VARCHAR(100),
    pi_name          VARCHAR(200) DEFAULT "",
    u_refresh_token  VARCHAR(500) DEFAULT NULL,
    u_reg_date       TIMESTAMP DEFAULT NOW(),
    u_mod_date       TIMESTAMP DEFAULT NOW()
);

DROP TABLE IF EXISTS TBL_USER_STATUS;
CREATE TABLE TBL_USER_STATUS (
    u_status INT NOT NULL DEFAULT 1,
    u_status_name VARCHAR(30) NOT NULL
);

DROP TABLE IF EXISTS TBL_USER_PROFILE_IMG;
CREATE TABLE TBL_USER_PROFILE_IMG (
    pi_no 		INT	NOT NULL AUTO_INCREMENT PRIMARY KEY,
    pi_name 	VARCHAR(200) NOT NULL,
    u_no 		INT NOT NULL,
    pi_reg_date	TIMESTAMP DEFAULT NOW()
);


DROP TABLE IF EXISTS TBL_FRIDGE;
CREATE TABLE TBL_FRIDGE (
    u_no		INT	NOT NULL,
    ig_no		INT	NOT NULL,
    f_reg_date	TIMESTAMP DEFAULT NOW()
);

DROP TABLE IF EXISTS TBL_LIKE_RECIPE;
CREATE TABLE TBL_LIKE_RECIPE (
    u_no		INT	NOT NULL AUTO_INCREMENT PRIMARY KEY,
    r_no		INT	NOT NULL,
    lr_reg_date	TIMESTAMP DEFAULT NOW()
);


DROP TABLE IF EXISTS TBL_ORDER;
CREATE TABLE TBL_ORDER (
    o_no			INT	NOT NULL AUTO_INCREMENT PRIMARY KEY,
    o_id			VARCHAR(50)	NOT NULL,
    u_no			INT	NOT NULL,
    o_s_no			INT	NOT NULL DEFAULT 1,
    o_count			INT	NOT NULL,
    o_price			INT	NOT NULL,
    o_final_price	INT	NOT NULL,
    p_no			INT	NOT NULL,
    o_reg_date		TIMESTAMP DEFAULT NOW(),
    o_mod_date		TIMESTAMP DEFAULT NOW()
);


DROP TABLE IF EXISTS TBL_MARKET_CART;
CREATE TABLE TBL_MARKET_CART (
    mc_no			INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    u_no			INT	NOT NULL,
    i_no			INT	NOT NULL,
    mc_count		INT	DEFAULT 1,
    mc_reg_date		TIMESTAMP DEFAULT NOW(),
    mc_mod_date		TIMESTAMP DEFAULT NOW()
);

DROP TABLE IF EXISTS TBL_ORDER_STATUS;
CREATE TABLE TBL_ORDER_STATUS (
    o_s_no		INT	NOT NULL DEFAULT 1,
    o_s_name	VARCHAR(30)	NOT NULL
);


DROP TABLE IF EXISTS TBL_PUSH;
CREATE TABLE TBL_PUSH (
    p_no		INT	NOT NULL AUTO_INCREMENT PRIMARY KEY,
    u_no		INT	NOT NULL,
    p_c_no		INT	NOT NULL,
    p_title		VARCHAR(100) NOT NULL,
    p_content	VARCHAR(255) NOT NULL,
    p_status	BOOLEAN DEFAULT FALSE,
    p_reg_date	TIMESTAMP DEFAULT NOW()
);

DROP TABLE IF EXISTS TBL_PUSH_CATE;
CREATE TABLE TBL_PUSH_CATE (
    p_c_no		INT	NOT NULL,
    p_c_name	VARCHAR(30)	NOT NULL
);

DROP TABLE IF EXISTS TBL_PAYMENT;
CREATE TABLE TBL_PAYMENT (
    p_no		INT	NOT NULL AUTO_INCREMENT PRIMARY KEY,
    u_no		INT	NOT NULL,
    p_price		INT	NOT NULL,
    p_s_no		INT	NOT NULL DEFAULT 1,
    p_reg_date	TIMESTAMP DEFAULT NOW(),
    p_mod_date	TIMESTAMP DEFAULT NOW()
);

DROP TABLE IF EXISTS TBL_PAYMENT_STATUS;
CREATE TABLE TBL_PAYMENT_STATUS (
    p_s_no		INT	NOT NULL DEFAULT 1,
    p_s_name	VARCHAR(30)	NOT NULL
);

-- REST
--CREATE DATABASE REST;
--USE REST;

DROP TABLE IF EXISTS REFRIGERATOR;
CREATE TABLE REFRIGERATOR(
    RF_NO		INT			NOT NULL,
    RF_NAME		VARCHAR(40)	NOT NULL,
    PRIMARY KEY(RF_NO)
);

DROP TABLE IF EXISTS PRODUCT;
CREATE TABLE PRODUCT(
    PROD_NO					INT			AUTO_INCREMENT,
    PROD_YMD				INT 		NOT NULL,
    PROD_CODE				INT			NOT NULL,
    PROD_NAME				VARCHAR(40)	NOT NULL,
    PROD_SPCS_CODE			INT			NOT NULL,
    PROD_SPCS_NAME			VARCHAR(40)	NOT NULL,
    PROD_AVRG_PRCE			INT			NOT NULL,
    PROD_GRAD_CODE			INT			NOT NULL,
    PROD_GRAD_NAME			VARCHAR(10)	NOT NULL,
    DSBN_STEP_ACTO_UNIT_NM	VARCHAR(10)	NOT NULL,
    DSBN_STEP_ACTO_WT		INT			NOT NULL,
    TDY_LWET_PRCE			VARCHAR(10)	NOT NULL,
    TDY_MAX_PRCE			VARCHAR(10)	NOT NULL,
    PRIMARY KEY(PROD_NO)
);

DROP TABLE IF EXISTS RECIPE_BASIC;
CREATE TABLE RECIPE_BASIC(
    RECP_CODE			INT				NOT NULL,
    RECP_NAME			VARCHAR(100)	NOT NULL,
    RECP_INTRO			VARCHAR(1000)	NOT NULL,
    RECP_REGION_CODE	INT				NOT NULL,
    RECP_REGION_NAME	VARCHAR(30)		NOT NULL,
    RECP_CATEGORY_CODE	INT				NOT NULL,
    RECP_CATEGORY_NAME	VARCHAR(80)		NOT NULL,
    RECP_TIME			VARCHAR(80),
    RECP_KCAL			VARCHAR(80)		DEFAULT '-',
    RECP_SERVIN			VARCHAR(60),
    RECP_DIFFICULT		VARCHAR(40),
    RECP_MAIN_IMG		VARCHAR(1200),
    PRIMARY KEY(RECP_CODE)
);

DROP TABLE IF EXISTS RECIPE_INGREDIENT;
CREATE TABLE RECIPE_INGREDIENT(
    RECP_CODE				INT 		NOT NULL,
    RECP_INGRD_ORDER_NO		INT 		NOT NULL,
    RECP_INGRD_NAME			VARCHAR(60)	NOT NULL,
    RECP_INGRD_CODE			INT			DEFAULT 0,
    RECP_INGRD_PORTIONS		VARCHAR(60)	NOT NULL,
    RECP_INGRD_TYPE			INT,
    RECP_INGRED_TYPE_NAME	VARCHAR(30)
);

DROP TABLE IF EXISTS RECIPE_PROGRESS;
CREATE TABLE RECIPE_PROGRESS(
    RECP_CODE				INT				NOT NULL,
    RECP_ORDER_NO			INT				NOT NULL,
    RECP_ORDER_DETAIL		VARCHAR(1000)	NOT NULL,
    RECP_ORDER_IMG			VARCHAR(1000),
    RECP_ORDER_TIP			VARCHAR(1000)
);

DROP TABLE IF EXISTS RECIPE_REGION;
CREATE TABLE RECIPE_REGION (
    RECP_REGION_CODE INT,
    RECP_REGION_NAME VARCHAR(30)
);

DROP TABLE IF EXISTS RECIPE_CATEGORY;
CREATE TABLE RECIPE_CATEGORY (
    RECP_CATEGORY_CODE INT,
    RECP_CATEGORY_NAME VARCHAR(80)
);